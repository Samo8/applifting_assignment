// Mocks generated by Mockito 5.3.2 from annotations
// in applifting_assignment/test/app/launch/data/repository/launch_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:applifting_assignment/app/launch/data/dto/launch_dto.dart'
    as _i4;
import 'package:applifting_assignment/app/launch/data/dto/launch_filter_dto.dart'
    as _i5;
import 'package:mockito/mockito.dart' as _i1;

import 'launch_repository_test.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [MockLaunchRemoteDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMockLaunchRemoteDatasource extends _i1.Mock
    implements _i2.MockLaunchRemoteDatasource {
  MockMockLaunchRemoteDatasource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.LaunchDTO>> fetchUpcomingLaunches() =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchUpcomingLaunches,
          [],
        ),
        returnValue: _i3.Future<List<_i4.LaunchDTO>>.value(<_i4.LaunchDTO>[]),
      ) as _i3.Future<List<_i4.LaunchDTO>>);
  @override
  _i3.Future<List<_i4.LaunchDTO>> fetchPastLaunches() => (super.noSuchMethod(
        Invocation.method(
          #fetchPastLaunches,
          [],
        ),
        returnValue: _i3.Future<List<_i4.LaunchDTO>>.value(<_i4.LaunchDTO>[]),
      ) as _i3.Future<List<_i4.LaunchDTO>>);
}

/// A class which mocks [MockLaunchLocalFilterDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMockLaunchLocalFilterDatasource extends _i1.Mock
    implements _i2.MockLaunchLocalFilterDatasource {
  MockMockLaunchLocalFilterDatasource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i5.LaunchFilterDTO?> fetchFilter() => (super.noSuchMethod(
        Invocation.method(
          #fetchFilter,
          [],
        ),
        returnValue: _i3.Future<_i5.LaunchFilterDTO?>.value(),
      ) as _i3.Future<_i5.LaunchFilterDTO?>);
  @override
  _i3.Future<void> persistFilter(_i5.LaunchFilterDTO? filter) =>
      (super.noSuchMethod(
        Invocation.method(
          #persistFilter,
          [filter],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
