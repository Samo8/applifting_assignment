// Mocks generated by Mockito 5.3.2 from annotations
// in applifting_assignment/test/app/company_info/data/repository/company_info_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:applifting_assignment/app/company_info/data/dto/company_info_dto.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

import 'company_info_repository_test.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCompanyInfoDTO_0 extends _i1.SmartFake
    implements _i2.CompanyInfoDTO {
  _FakeCompanyInfoDTO_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MockCompanyInfoRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMockCompanyInfoRemoteDataSource extends _i1.Mock
    implements _i3.MockCompanyInfoRemoteDataSource {
  MockMockCompanyInfoRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.CompanyInfoDTO> fetchCompanyInfo() => (super.noSuchMethod(
        Invocation.method(
          #fetchCompanyInfo,
          [],
        ),
        returnValue: _i4.Future<_i2.CompanyInfoDTO>.value(_FakeCompanyInfoDTO_0(
          this,
          Invocation.method(
            #fetchCompanyInfo,
            [],
          ),
        )),
      ) as _i4.Future<_i2.CompanyInfoDTO>);
}

/// A class which mocks [MockCompanyInfoLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMockCompanyInfoLocalDataSource extends _i1.Mock
    implements _i3.MockCompanyInfoLocalDataSource {
  MockMockCompanyInfoLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.CompanyInfoDTO?> fetchCompanyInfo() => (super.noSuchMethod(
        Invocation.method(
          #fetchCompanyInfo,
          [],
        ),
        returnValue: _i4.Future<_i2.CompanyInfoDTO?>.value(),
      ) as _i4.Future<_i2.CompanyInfoDTO?>);
  @override
  _i4.Future<void> persistCompanyInfo(_i2.CompanyInfoDTO? companyInfo) =>
      (super.noSuchMethod(
        Invocation.method(
          #persistCompanyInfo,
          [companyInfo],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}

/// A class which mocks [MockNetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockMockNetworkInfo extends _i1.Mock implements _i3.MockNetworkInfo {
  MockMockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> isInternetConnectionAvailable() => (super.noSuchMethod(
        Invocation.method(
          #isInternetConnectionAvailable,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
}
